<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classoskr_1_1TransportReceiver" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>oskr::TransportReceiver</compoundname>
    <derivedcompoundref refid="classoskr_1_1Client" prot="public" virt="non-virtual">oskr::Client&lt; Transport &gt;</derivedcompoundref>
    <includes refid="TransportReceiver_8hpp" local="no">TransportReceiver.hpp</includes>
    <templateparamlist>
      <param>
        <type>TransportTrait</type>
        <declname>Transport</declname>
        <defname>Transport</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classoskr_1_1TransportReceiver_1a244b09cac653eb0130138854cc2f99dc" prot="protected" static="no" mutable="no">
        <type>Transport &amp;</type>
        <definition>Transport&amp; oskr::TransportReceiver&lt; Transport &gt;::transport</definition>
        <argsstring></argsstring>
        <name>transport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/TransportReceiver.hpp" line="27" column="15" bodyfile="core/TransportReceiver.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classoskr_1_1TransportReceiver_1aa746e8bcb10cd122441a010a6440188e" prot="public" static="no" mutable="no">
        <type>const Transport::Address</type>
        <definition>const Transport::Address oskr::TransportReceiver&lt; Transport &gt;::address</definition>
        <argsstring></argsstring>
        <name>address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/TransportReceiver.hpp" line="30" column="39" bodyfile="core/TransportReceiver.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classoskr_1_1TransportReceiver_1a6634f735aeea18352165d88c687ffa69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>oskr::TransportReceiver&lt; Transport &gt;::TransportReceiver</definition>
        <argsstring>(Transport &amp;transport, typename Transport::Address address)</argsstring>
        <name>TransportReceiver</name>
        <param>
          <type>Transport &amp;</type>
          <declname>transport</declname>
        </param>
        <param>
          <type>typename Transport::Address</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/TransportReceiver.hpp" line="32" column="5" bodyfile="core/TransportReceiver.hpp" bodystart="32" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classoskr_1_1TransportReceiver_1a352d4c0453f2dd2c9f51d6bd5f6a64c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual oskr::TransportReceiver&lt; Transport &gt;::~TransportReceiver</definition>
        <argsstring>()</argsstring>
        <name>~TransportReceiver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/TransportReceiver.hpp" line="45" column="13" bodyfile="core/TransportReceiver.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classoskr_1_1TransportReceiver_1a498a81c4a14c623d4bbb846a12979e5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void oskr::TransportReceiver&lt; Transport &gt;::receiveMessage</definition>
        <argsstring>(const typename Transport::Address &amp;remote, RxSpan span)=0</argsstring>
        <name>receiveMessage</name>
        <reimplementedby refid="classoskr_1_1BasicClient_1a9c7e81dcb64d7e877a71c67734a28e18">receiveMessage</reimplementedby>
        <param>
          <type>const typename Transport::Address &amp;</type>
          <declname>remote</declname>
        </param>
        <param>
          <type>RxSpan</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/TransportReceiver.hpp" line="48" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base class for packet-listeners, i.e., all participants of protocols. The receiving half of the actor model. </para>
    </briefdescription>
    <detaileddescription>
<para>Each instance of <computeroutput><ref refid="classoskr_1_1TransportReceiver" kindref="compound">TransportReceiver</ref></computeroutput> has a static address throughout its lifetime. It also can only work with one specific <computeroutput>Transport</computeroutput> type.</para>
<para>After registered to a <computeroutput>Transport</computeroutput> instance, virtual method <computeroutput>receiveMessage</computeroutput> will be called whenever messages arrives receiver&apos;s address.</para>
<para>The <computeroutput><ref refid="classoskr_1_1TransportReceiver" kindref="compound">TransportReceiver</ref></computeroutput> itself does not make any assumption on how to process received message, but a subclass will probably want to call <computeroutput>Transport</computeroutput> methods to send message and schedule timeout. So it is conventional to ask for a reference of <computeroutput>Transport</computeroutput> instance when constructing subclass. Because the <computeroutput>Transport</computeroutput> base class follows CRTP, <computeroutput>Transport &amp;</computeroutput> is basically equals to <computeroutput>oskr::Transport&lt;Transport&gt; &amp;</computeroutput> in every situation. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>oskr::TransportReceiver&lt; Transport &gt;</label>
        <link refid="classoskr_1_1TransportReceiver"/>
      </node>
      <node id="3">
        <label>oskr::BasicClient&lt; Transport, ReplicaMessage &gt;</label>
        <link refid="classoskr_1_1BasicClient"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>oskr::Client&lt; Transport &gt;</label>
        <link refid="classoskr_1_1Client"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>oskr::TransportReceiver&lt; Transport &gt;</label>
        <link refid="classoskr_1_1TransportReceiver"/>
        <childnode refid="2" relation="usage">
          <edgelabel>transport</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Transport</label>
      </node>
    </collaborationgraph>
    <location file="core/TransportReceiver.hpp" line="24" column="12" bodyfile="core/TransportReceiver.hpp" bodystart="25" bodyend="49"/>
    <listofallmembers>
      <member refid="classoskr_1_1TransportReceiver_1aa746e8bcb10cd122441a010a6440188e" prot="public" virt="non-virtual"><scope>oskr::TransportReceiver</scope><name>address</name></member>
      <member refid="classoskr_1_1TransportReceiver_1a498a81c4a14c623d4bbb846a12979e5e" prot="public" virt="pure-virtual"><scope>oskr::TransportReceiver</scope><name>receiveMessage</name></member>
      <member refid="classoskr_1_1TransportReceiver_1a244b09cac653eb0130138854cc2f99dc" prot="protected" virt="non-virtual"><scope>oskr::TransportReceiver</scope><name>transport</name></member>
      <member refid="classoskr_1_1TransportReceiver_1a6634f735aeea18352165d88c687ffa69" prot="public" virt="non-virtual"><scope>oskr::TransportReceiver</scope><name>TransportReceiver</name></member>
      <member refid="classoskr_1_1TransportReceiver_1a352d4c0453f2dd2c9f51d6bd5f6a64c4" prot="public" virt="virtual"><scope>oskr::TransportReceiver</scope><name>~TransportReceiver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
