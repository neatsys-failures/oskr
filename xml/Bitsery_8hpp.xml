<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Bitsery_8hpp" kind="file" language="C++">
    <compoundname>Bitsery.hpp</compoundname>
    <includes local="no">bitsery/traits/core/std_defaults.h</includes>
    <includes refid="Log_8hpp" local="yes">core/Log.hpp</includes>
    <includedby refid="Foundation_8hpp" local="yes">core/Foundation.hpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="5">
        <label>core/Type.hpp</label>
        <link refid="Type_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="14">
        <label>bitsery/brief_syntax/vector.h</label>
      </node>
      <node id="9">
        <label>core/Utility.hpp</label>
        <link refid="Utility_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>boost/container/small_vector.hpp</label>
      </node>
      <node id="15">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="10">
        <label>random</label>
      </node>
      <node id="12">
        <label>bitsery/bitsery.h</label>
      </node>
      <node id="2">
        <label>bitsery/traits/core/std_defaults.h</label>
      </node>
      <node id="3">
        <label>core/Log.hpp</label>
        <link refid="Log_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>core/Bitsery.hpp</label>
        <link refid="Bitsery_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>bitsery/adapter/buffer.h</label>
      </node>
      <node id="7">
        <label>span</label>
      </node>
      <node id="13">
        <label>bitsery/brief_syntax.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12">
        <label>transport/Simulated.hpp</label>
        <link refid="Simulated_8hpp_source"/>
      </node>
      <node id="9">
        <label>common/Quorum.hpp</label>
        <link refid="Quorum_8hpp_source"/>
      </node>
      <node id="3">
        <label>app/Mock.hpp</label>
        <link refid="Mock_8hpp_source"/>
      </node>
      <node id="10">
        <label>common/StatefulTimeout.hpp</label>
        <link refid="StatefulTimeout_8hpp_source"/>
      </node>
      <node id="11">
        <label>transport/DPDKClient.hpp</label>
        <link refid="DPDKClient_8hpp_source"/>
      </node>
      <node id="2">
        <label>core/Foundation.hpp</label>
        <link refid="Foundation_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>common/ChainLog.hpp</label>
        <link refid="ChainLog_8hpp_source"/>
      </node>
      <node id="1">
        <label>core/Bitsery.hpp</label>
        <link refid="Bitsery_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>app/Null.hpp</label>
        <link refid="Null_8hpp_source"/>
      </node>
      <node id="7">
        <label>common/ClientTable.hpp</label>
        <link refid="ClientTable_8hpp_source"/>
      </node>
      <node id="8">
        <label>common/ListLog.hpp</label>
        <link refid="ListLog_8hpp_source"/>
      </node>
      <node id="5">
        <label>common/BasicClient.hpp</label>
        <link refid="BasicClient_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbitsery_1_1traits_1_1ContainerTraits_3_01oskr_1_1Data_01_4" prot="public">bitsery::traits::ContainerTraits&lt; oskr::Data &gt;</innerclass>
    <innernamespace refid="namespacebitsery">bitsery</innernamespace>
    <innernamespace refid="namespacebitsery_1_1traits">bitsery::traits</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>have<sp/>to<sp/>extract<sp/>bitsery-required<sp/>specilization<sp/>out<sp/>to<sp/>prevent<sp/>cyclic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>including</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bitsery/traits/core/std_defaults.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/Log.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">bitsery::traits</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>work...<sp/>i<sp/>think?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="12" refid="structbitsery_1_1traits_1_1ContainerTraits_3_01oskr_1_1Data_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ContainerTraits&lt;oskr::Data&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>StdContainer&lt;oskr::Data,<sp/>true,<sp/>true&gt;<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>bitsery::traits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">bitsery<sp/></highlight><highlight class="comment">//<sp/>interesting<sp/>fact:<sp/>oskr::Data<sp/>not<sp/>belong<sp/>to<sp/>oskr<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(S<sp/>&amp;s,<sp/><ref refid="Type_8hpp_1a78219b83ef8e007f284153e1a1e4894e" kindref="member">oskr::Data</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>s.container1b(data,<sp/>240);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(S<sp/>&amp;s,<sp/><ref refid="classoskr_1_1Log" kindref="compound">oskr::Log&lt;&gt;::Entry</ref><sp/>&amp;entry)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>s(entry.client_id,<sp/>entry.request_number,<sp/>entry.op);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(S<sp/>&amp;s,<sp/><ref refid="classoskr_1_1Log" kindref="compound">oskr::Log&lt;&gt;::List::Block</ref><sp/>&amp;block)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>s(block.n_entry);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>block.n_entry;<sp/>i<sp/>+=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s(block.entry_buffer[i]);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>bitsery</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="core/Bitsery.hpp"/>
  </compounddef>
</doxygen>
